<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.nasatrainedmonkeys.edt</groupId>
		<artifactId>edt-gae-wrapper</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

    <!-- The Basics -->
    <groupId>com.nasatrainedmonkeys.edt</groupId>
    <artifactId>edt-gae</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>edt-gae</name>
    <description>Google AppEngine project for Estado del Transito</description>
    <packaging>war</packaging>

    <dependencies>

        <!--
            jars from GAE's "lib/user" must be added as compile-time
            dependencies, as described here in "Copying JARs" section:
            http://code.google.com/appengine/docs/java/tools/ant.html
        -->
        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
            <exclusions>
                <!--
                    exclude the legacy javax.transaction:transaction-api
                    and replace it with javax.transaction:jta (it
                    appears to be the same thing)
                -->
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine.orm</groupId>
            <artifactId>datanucleus-appengine</artifactId>
            <version>1.0.5.final</version>
        </dependency>

        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>1.1.5</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>datanucleus-jpa</artifactId>
            <version>1.1.5</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>geronimo-jpa_3.0_spec</artifactId>
            <version>1.1.1</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>

        <!-- 
          GWT dependencies
        -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            J2EE Servlet API. We need it to compile IndexServlet class.
            You can probably remove it, if you don't explicitly use
            Servlets
        -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Make use of JSP tags. Remove, if you don't use JSPs
        -->
        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <version>1.1.2</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>

        <!-- These dependencies are here just for enabling logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.6</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.15</version>
        </dependency>

        <!-- Test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>

        <!--
            GAE libraries for local testing as described here:
            http://code.google.com/appengine/docs/java/howto/unittesting.html
        -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                Until the patch at http://jira.codehaus.org/browse/MECLIPSE-402 is
                accepted and 2.8 release of this plugin is out, we have to rely on
                this snapshot from Bearded Geeks.
            -->
            <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.8-20100130</version>
                    <configuration>
                            <buildOutputDirectory>war/WEB-INF/classes</buildOutputDirectory>
                            <fakeBuildOutputDirectory>true</fakeBuildOutputDirectory>
                            <projectnatures>
                                    <projectnature>org.eclipse.jdt.core.javanature</projectnature>
                                    <projectnature>com.google.gdt.eclipse.core.webAppNature</projectnature>
                                    <projectnature>com.google.appengine.eclipse.core.gaeNature</projectnature>
                            </projectnatures>
                            <buildcommands>
                                    <buildCommand>
                                            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
                                            <arguments>
                                                    <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/MavenCleaner.launch</LaunchConfigHandle>
                                            </arguments>
                                    </buildCommand>
                                    <buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
                                    <buildcommand>com.google.gdt.eclipse.core.webAppProjectValidator</buildcommand>
                                    <buildcommand>com.google.appengine.eclipse.core.enhancerbuilder</buildcommand>
                                    <buildcommand>com.google.appengine.eclipse.core.projectValidator</buildcommand>
                                    <buildCommand>
                                            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
                                            <arguments>
                                                    <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/MavenBuilder.launch</LaunchConfigHandle>
                                            </arguments>
                                    </buildCommand>
                            </buildcommands>
                            <classpathContainers>
                                    <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                                    <classpathContainer>com.google.appengine.eclipse.core.GAE_CONTAINER</classpathContainer>
                            </classpathContainers>
                            <excludes>
                                    <exclude>com.google.appengine:appengine-api-1.0-sdk</exclude>
                                    <exclude>com.google.appengine:appengine-api-labs</exclude>
                                    <exclude>com.google.appengine.orm:datanucleus-appengine</exclude>
                                    <exclude>org.datanucleus:datanucleus-core</exclude>
                                    <exclude>org.datanucleus:datanucleus-jpa</exclude>
                                    <exclude>org.apache.geronimo.specs:geronimo-jpa_3.0_spec</exclude>
                                    <exclude>org.apache.geronimo.specs:geronimo-jta_1.1_spec</exclude>
                                    <exclude>javax.jdo:jdo2-api</exclude>
                            </excludes>
                            <linkedResources>
                                    <linkedResource>
                                            <name>war</name>
                                            <type>2</type>
                                            <location>${basedir}/target/${project.artifactId}-${project.version}</location>
                                    </linkedResource>
                            </linkedResources>
                            <additionalConfig>
                                    <file>
                                            <name>.externalToolBuilders/MavenBuilder.launch</name>
                                            <content>
<![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.maven.ide.eclipse.Maven2BuilderConfigurationType">
<booleanAttribute key="M2_DEBUG_OUTPUT" value="false"/>
<stringAttribute key="M2_GOALS_AFTER_CLEAN" value="war:exploded"/>
<stringAttribute key="M2_GOALS_AUTO_BUILD" value="war:exploded"/>
<stringAttribute key="M2_GOALS_CLEAN" value=""/>
<stringAttribute key="M2_GOALS_MANUAL_BUILD" value="war:exploded"/>
<booleanAttribute key="M2_NON_RECURSIVE" value="false"/>
<booleanAttribute key="M2_OFFLINE" value="false"/>
<stringAttribute key="M2_PROFILES" value=""/>
<listAttribute key="M2_PROPERTIES"/>
<stringAttribute key="M2_RUNTIME" value="EMBEDDED"/>
<booleanAttribute key="M2_SKIP_TESTS" value="false"/>
<booleanAttribute key="M2_UPDATE_SNAPSHOTS" value="false"/>
<booleanAttribute key="M2_WORKSPACE_RESOLUTION" value="false"/>
<booleanAttribute key="editedByExternalToolsMainTab" value="true"/>
<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
<stringAttribute key="org.eclipse.jdt.launching.WORKING_DIRECTORY" value="${basedir}"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,incremental,auto,"/>
<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
</launchConfiguration>]]>
                                            </content>
                                    </file>
                                    <file>
                                            <name>.externalToolBuilders/MavenCleaner.launch</name>
                                            <content>
<![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launchConfiguration type="org.maven.ide.eclipse.Maven2BuilderConfigurationType">
<booleanAttribute key="M2_DEBUG_OUTPUT" value="false"/>
<stringAttribute key="M2_GOALS_AFTER_CLEAN" value="compile test-compile"/>
<stringAttribute key="M2_GOALS_AUTO_BUILD" value=""/>
<stringAttribute key="M2_GOALS_CLEAN" value="clean"/>
<stringAttribute key="M2_GOALS_MANUAL_BUILD" value=""/>
<booleanAttribute key="M2_NON_RECURSIVE" value="false"/>
<booleanAttribute key="M2_OFFLINE" value="false"/>
<stringAttribute key="M2_PROFILES" value=""/>
<listAttribute key="M2_PROPERTIES"/>
<stringAttribute key="M2_RUNTIME" value="EMBEDDED"/>
<booleanAttribute key="M2_SKIP_TESTS" value="false"/>
<booleanAttribute key="M2_UPDATE_SNAPSHOTS" value="false"/>
<booleanAttribute key="M2_WORKSPACE_RESOLUTION" value="false"/>
<booleanAttribute key="editedByExternalToolsMainTab" value="true"/>
<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
<stringAttribute key="org.eclipse.jdt.launching.WORKING_DIRECTORY" value="${basedir}"/>
<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value="full,clean"/>
<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
</launchConfiguration>]]>
                                            </content>
                                    </file>
                            </additionalConfig>
                    </configuration>
            </plugin>

            <!--
                This plug-in "enhances" your domain model objects (i.e.
                makes them persistent for datanucleus)
            -->
            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>maven-datanucleus-plugin</artifactId>
                <version>1.1.4</version>
                <configuration>
                    <!--
                        Make sure this path contains your persistent
                        classes!
                    -->
                    <mappingIncludes>**/model/*.class</mappingIncludes>
                    <verbose>true</verbose>
                    <enhancerName>ASM</enhancerName>
                    <api>JDO</api>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-core</artifactId>
                        <version>1.1.5</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.transaction</groupId>
                                <artifactId>transaction-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-rdbms</artifactId>
                        <version>1.1.5</version>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-enhancer</artifactId>
                        <version>1.1.4</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <warSourceExcludes>WEB-INF/lib/*.jar</warSourceExcludes>
                </configuration>
            </plugin>
<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-alpha-2</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/appengine-web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
 -->
 
            <!--
                Maven GWT plugin (ex.
                http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html)
                http://mojo.codehaus.org/gwt-maven-plugin
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <logLevel>INFO</logLevel>

                    <!-- match -Dgae.port -->
                    <port>${gae.port}</port>

                    <!-- This must point to your GWT modules! -->
                    <compileTargets>
                        <value>net.kindleit.gae.example.Messages</value>
                    </compileTargets>

                    <!-- This is for generating Asynch interfaces -->
                    <!-- <servicePattern>**/client/*Service.java</servicePattern> -->

                    <extraJvmArgs>-Xmx512m</extraJvmArgs>
                    <!--<jvm>${JAVA_HOME}</jvm>-->
                    <!--<noServer>false</noServer>-->

                    <!--
                        TODO This should help running GAE stuff in
                        hosted mode (when gwt-maven-plugin-1.2 is
                        released, see
                        http://jira.codehaus.org/browse/MGWT-112)
                    -->
                    <server>com.google.appengine.tools.development.gwt.AppEngineLauncher
                    </server>

                    <runTarget>/index.html</runTarget>
                    <style>DETAILED</style>
                    <webxml>war/WEB-INF/web.xml</webxml>
                    <!--
                        this parameter is VERY important with automatic
                        mode - has to match the version in your declared
                        deps
                    -->
                    <!--
                        if this is set incorrect (not a match), or left
                        out (default is 1.5.2 for 2.0-beta23) you will
                        have mysterious errors
                    -->
                    <gwtVersion>${gwt.version}</gwtVersion>
                </configuration>
                <executions>
                    <!--
                        <execution> <id>generateAsynch</id>
                        <phase>generate-sources</phase> <goals>
                        <goal>generateAsync</goal> </goals> </execution>
                    -->
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                The actual maven-gae-plugin. Type "mvn gae:run" to run
                project, "mvn gae:deploy" to upload to GAE.
            -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>0.5.2</version>
                <configuration>
                    <unpackVersion>${gae.version}</unpackVersion>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.google.appengine.orm</groupId>
                        <artifactId>datanucleus-appengine</artifactId>
                        <version>1.0.5.final</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
                Upload application to the appspot automatically, during
                release:perform
            -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!-- Java compiler version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Specify hard-coded project properties here -->
    <properties>
        <!--
            This is just for "eclipse:eclipse" goal to always attempt
            downloading sources
        -->
        <downloadSources>true</downloadSources>

        <!--
            Specify AppEngine version for your project. It should match
            SDK version pointed to by ${gae.home} property (Typically,
            one used by your Eclipse plug-in)
        -->
        <gae.version>1.3.1</gae.version>

        <!-- GWT version -->
        <gwt.version>1.7.1</gwt.version>

        <!--
            Upload to http://0.latest.<applicationName>.appspot.com by
            default
        -->
        <gae.application.version>0</gae.application.version>

        <!-- port defaults to 8080 -->
        <gae.port>8080</gae.port>

        <!--
            Produce detailed JS during GWT compilation for development
            environment
        -->
        <gwt.style>DETAILED</gwt.style>
    </properties>

    <profiles>

        <!--
            We can configure our integration server to activate this
            profile and perform gae:deploy, thus uploading latest
            snapshot to the
            http://1.latest.<applicationName>.appspot.com automatically
        -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>1</gae.application.version>

                <!-- Produce pretty JS during GWT compilation for test environment -->
                <gwt.style>PRETTY</gwt.style>
            </properties>
        </profile>

        <!--
            This profile will activate automatically during release and
            upload application to the
            http://2.latest.<applicationName>.appspot.com (We might want
            to set the 2nd version as our applications Default version
            to be accessible at http://<applicationName>.appspot.com)
        -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!--
                    During release, set application version in
                    appengine-web.xml to 2
                -->
                <gae.application.version>2</gae.application.version>

                <!--
                    Produce compressed JS during GWT compilation for
                    production environment
                -->
                <gwt.style>OBFUSCATED</gwt.style>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <!-- We go to mvnsearch.org after latest GAE SDK artifacts -->
	    <repository>
	        <id>mvnsearch.org</id>
	        <name>MVN Search</name>
	        <url>
	            http://www.mvnsearch.org/maven2
	        </url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
	    </repository>
        <repository>
            <id>DataNucleus_Repos2</id>
            <name>DataNucleus Repository</name>
            <url>http://www.datanucleus.org/downloads/maven2</url>
        </repository>
        <repository>
            <id>maven-gae-plugin-repo</id>
            <name>maven-gae-plugin repository</name>
            <url>
                http://maven-gae-plugin.googlecode.com/svn/repository
            </url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>DataNucleus_2</id>
            <url>http://www.datanucleus.org/downloads/maven2/</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven-gae-plugin-repo</id>
            <name>maven-gae-plugin repository</name>
            <url>
                http://maven-gae-plugin.googlecode.com/svn/repository
            </url>
        </pluginRepository>
 
        <!-- For retrieving maven-eclipse-plugin-2.8-20100130 -->
        <pluginRepository>
            <id>beardedgeeks-releases</id>
            <url>http://beardedgeeks.googlecode.com/svn/repository/releases
            </url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
